name: Actualizar la versión en el archivo VERSION

on:
  push:
    paths:
      - 'VERSION'  # Detecta cambios en el archivo VERSION
      - 'manifests/**'  # Detecta cambios en archivos en la carpeta manifests (si los hubiera)

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
    - name: Chequear el código
      uses: actions/checkout@v3

    - name: Leer la versión desde el archivo VERSION
      id: version
      run: |
        VERSION=$(cat VERSION)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV  # Guardar la versión como variable de entorno

    - name: Incrementar la versión
      id: increment-version
      run: |
        # Extraer el número de versión (esperamos algo como 1.0.0)
        VERSION_MAJOR=$(echo ${{ env.VERSION }} | cut -d '.' -f1)
        VERSION_MINOR=$(echo ${{ env.VERSION }} | cut -d '.' -f2)
        VERSION_PATCH=$(echo ${{ env.VERSION }} | cut -d '.' -f3)
        
        # Incrementar la versión en el último número (patch)
        VERSION_PATCH=$((VERSION_PATCH + 1))

        # Crear la nueva versión
        NEW_VERSION="${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
        
        echo "Nueva versión: ${NEW_VERSION}"  # Ver el cambio

        # Guardar la nueva versión en la variable de entorno
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

    - name: Guardar la nueva versión en el archivo VERSION
      run: |
        # Actualizar el archivo VERSION con la nueva versión
        echo "${{ env.NEW_VERSION }}" > VERSION

    - name: Hacer commit y push de la nueva versión
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add VERSION
        git commit -m "Actualización de la versión a ${{ env.NEW_VERSION }}"
        git push https://github.com/${{ github.repository }} HEAD:${{ github.ref }} --token ${{ secrets.GH_TOKEN }}






