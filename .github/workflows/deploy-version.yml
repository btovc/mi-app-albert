name: Actualizar versión y sincronizar con ArgoCD

on:
  push:
    paths:
      - 'manifests/**'  # Activar solo cuando cambien archivos dentro de manifests/
      - 'VERSION'       # Activar si cambia el archivo VERSION

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checar el código
      uses: actions/checkout@v3

    - name: Obtener versión actual
      id: get-version
      run: |
        if [ -f VERSION ]; then
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
        else
          echo "VERSION=1.0.0" >> $GITHUB_ENV

    - name: Incrementar versión
      id: bump-version
      run: |
        OLD_VERSION=${{ env.VERSION }}
        IFS='.' read -r -a PARTS <<< "$OLD_VERSION"
        PATCH=$((PARTS[2] + 1))
        NEW_VERSION="${PARTS[0]}.${PARTS[1]}.$PATCH"
        echo "$NEW_VERSION" > VERSION
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Actualizar deployment.yaml con la nueva versión
      run: |
        sed -i "s/nginx:.*/nginx:${{ env.NEW_VERSION }}/" manifests/deployment.yaml

    - name: Hacer commit y push de la nueva versión con mensaje personalizado
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add VERSION manifests/deployment.yaml
        git commit -m "Bump version to ${{ env.NEW_VERSION }}: Cambios generales en la aplicación."
        git push



