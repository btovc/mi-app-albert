name: Actualizar versión en deployment.yaml

on:
  push:
    paths:
      - 'VERSION'
      - 'manifests/**'

jobs:
  update-deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Chequear el código
      uses: actions/checkout@v3

    - name: Leer la versión desde el archivo VERSION
      id: version
      run: |
        VERSION=$(cat VERSION)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Crear changelog dinámico (opcional)
      id: changelog
      run: |
        echo "Actualización a la versión ${{ env.VERSION }}: Mejora en la carga de imágenes y optimización de la página de inicio." > changelog.txt
        echo "Changelog generado: $(cat changelog.txt)"

    - name: Actualizar deployment.yaml con la nueva versión y changelog
      run: |
        # Actualizar la versión
        sed -i "s/version: .*/version: \"${{ env.VERSION }}\"/" manifests/deployment.yaml

        # Actualizar el changelog, manejar múltiples líneas
        awk -v changelog="$(cat changelog.txt)" '
          BEGIN { found = 0 }
          /changelog: \|/ { found = 1 }
          found && /- / { print "    changelog: |"; found = 2 }
          found == 2 { print "      " $0 }
          found == 2 && !/^- / { print changelog; found = 3 }
          { print }
        ' manifests/deployment.yaml > temp.yaml && mv temp.yaml manifests/deployment.yaml

    - name: Actualizar repositorio local
      run: |
        git pull origin main  # Aseguramos que el repositorio esté actualizado

    - name: Hacer commit y push de los cambios
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add manifests/deployment.yaml
        git commit -m "Actualización a la versión ${{ env.VERSION }} con cambios."
        git push https://github.com/${{ github.repository }} HEAD:${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # El token se pasa de manera segura



